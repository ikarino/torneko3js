require=function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){"use strict";var format=require("quick-format-unescaped");module.exports=pino;var _console=pfGlobalThisOrFallback().console||{};var stdSerializers={mapHttpRequest:mock,mapHttpResponse:mock,wrapRequestSerializer:passthrough,wrapResponseSerializer:passthrough,wrapErrorSerializer:passthrough,req:mock,res:mock,err:asErrValue};function pino(opts){opts=opts||{};opts.browser=opts.browser||{};var transmit=opts.browser.transmit;if(transmit&&typeof transmit.send!=="function"){throw Error("pino: transmit option must have a send function")}var proto=opts.browser.write||_console;if(opts.browser.write)opts.browser.asObject=true;var serializers=opts.serializers||{};var serialize=Array.isArray(opts.browser.serialize)?opts.browser.serialize.filter(function(k){return k!=="!stdSerializers.err"}):opts.browser.serialize===true?Object.keys(serializers):false;var stdErrSerialize=opts.browser.serialize;if(Array.isArray(opts.browser.serialize)&&opts.browser.serialize.indexOf("!stdSerializers.err")>-1)stdErrSerialize=false;var levels=["error","fatal","warn","info","debug","trace"];if(typeof proto==="function"){proto.error=proto.fatal=proto.warn=proto.info=proto.debug=proto.trace=proto}if(opts.enabled===false)opts.level="silent";var level=opts.level||"info";var logger=Object.create(proto);if(!logger.log)logger.log=noop;Object.defineProperty(logger,"levelVal",{get:getLevelVal});Object.defineProperty(logger,"level",{get:getLevel,set:setLevel});var setOpts={transmit:transmit,serialize:serialize,asObject:opts.browser.asObject,levels:levels};logger.levels=pino.levels;logger.level=level;logger.setMaxListeners=logger.getMaxListeners=logger.emit=logger.addListener=logger.on=logger.prependListener=logger.once=logger.prependOnceListener=logger.removeListener=logger.removeAllListeners=logger.listeners=logger.listenerCount=logger.eventNames=logger.write=logger.flush=noop;logger.serializers=serializers;logger._serialize=serialize;logger._stdErrSerialize=stdErrSerialize;logger.child=child;if(transmit)logger._logEvent=createLogEventShape();function getLevelVal(){return this.level==="silent"?Infinity:this.levels.values[this.level]}function getLevel(){return this._level}function setLevel(level){if(level!=="silent"&&!this.levels.values[level]){throw Error("unknown level "+level)}this._level=level;set(setOpts,logger,"error","log");set(setOpts,logger,"fatal","error");set(setOpts,logger,"warn","error");set(setOpts,logger,"info","log");set(setOpts,logger,"debug","log");set(setOpts,logger,"trace","log")}function child(bindings){if(!bindings){throw new Error("missing bindings for child Pino")}var bindingsSerializers=bindings.serializers;if(serialize&&bindingsSerializers){var childSerializers=Object.assign({},serializers,bindingsSerializers);var childSerialize=opts.browser.serialize===true?Object.keys(childSerializers):serialize;delete bindings.serializers;applySerializers([bindings],childSerialize,childSerializers,this._stdErrSerialize)}function Child(parent){this._childLevel=(parent._childLevel|0)+1;this.error=bind(parent,bindings,"error");this.fatal=bind(parent,bindings,"fatal");this.warn=bind(parent,bindings,"warn");this.info=bind(parent,bindings,"info");this.debug=bind(parent,bindings,"debug");this.trace=bind(parent,bindings,"trace");if(childSerializers){this.serializers=childSerializers;this._serialize=childSerialize}if(transmit){this._logEvent=createLogEventShape([].concat(parent._logEvent.bindings,bindings))}}Child.prototype=this;return new Child(this)}return logger}pino.LOG_VERSION=1;pino.levels={values:{fatal:60,error:50,warn:40,info:30,debug:20,trace:10},labels:{10:"trace",20:"debug",30:"info",40:"warn",50:"error",60:"fatal"}};pino.stdSerializers=stdSerializers;function set(opts,logger,level,fallback){var proto=Object.getPrototypeOf(logger);logger[level]=logger.levelVal>logger.levels.values[level]?noop:proto[level]?proto[level]:_console[level]||_console[fallback]||noop;wrap(opts,logger,level)}function wrap(opts,logger,level){if(!opts.transmit&&logger[level]===noop)return;logger[level]=function(write){return function LOG(){var ts=Date.now();var args=new Array(arguments.length);var proto=Object.getPrototypeOf&&Object.getPrototypeOf(this)===_console?_console:this;for(var i=0;i<args.length;i++)args[i]=arguments[i];if(opts.serialize&&!opts.asObject){applySerializers(args,this._serialize,this.serializers,this._stdErrSerialize)}if(opts.asObject)write.call(proto,asObject(this,level,args,ts));else write.apply(proto,args);if(opts.transmit){var transmitLevel=opts.transmit.level||logger.level;var transmitValue=pino.levels.values[transmitLevel];var methodValue=pino.levels.values[level];if(methodValue<transmitValue)return;transmit(this,{ts:ts,methodLevel:level,methodValue:methodValue,transmitLevel:transmitLevel,transmitValue:pino.levels.values[opts.transmit.level||logger.level],send:opts.transmit.send,val:logger.levelVal},args)}}}(logger[level])}function asObject(logger,level,args,ts){if(logger._serialize)applySerializers(args,logger._serialize,logger.serializers,logger._stdErrSerialize);var argsCloned=args.slice();var msg=argsCloned[0];var o={time:ts,level:pino.levels.values[level]};var lvl=(logger._childLevel|0)+1;if(lvl<1)lvl=1;if(msg!==null&&typeof msg==="object"){while(lvl--&&typeof argsCloned[0]==="object"){Object.assign(o,argsCloned.shift())}msg=argsCloned.length?format(argsCloned.shift(),argsCloned):undefined}else if(typeof msg==="string")msg=format(argsCloned.shift(),argsCloned);if(msg!==undefined)o.msg=msg;return o}function applySerializers(args,serialize,serializers,stdErrSerialize){for(var i in args){if(stdErrSerialize&&args[i]instanceof Error){args[i]=pino.stdSerializers.err(args[i])}else if(typeof args[i]==="object"&&!Array.isArray(args[i])){for(var k in args[i]){if(serialize&&serialize.indexOf(k)>-1&&k in serializers){args[i][k]=serializers[k](args[i][k])}}}}}function bind(parent,bindings,level){return function(){var args=new Array(1+arguments.length);args[0]=bindings;for(var i=1;i<args.length;i++){args[i]=arguments[i-1]}return parent[level].apply(this,args)}}function transmit(logger,opts,args){var send=opts.send;var ts=opts.ts;var methodLevel=opts.methodLevel;var methodValue=opts.methodValue;var val=opts.val;var bindings=logger._logEvent.bindings;applySerializers(args,logger._serialize||Object.keys(logger.serializers),logger.serializers,logger._stdErrSerialize===undefined?true:logger._stdErrSerialize);logger._logEvent.ts=ts;logger._logEvent.messages=args.filter(function(arg){return bindings.indexOf(arg)===-1});logger._logEvent.level.label=methodLevel;logger._logEvent.level.value=methodValue;send(methodLevel,logger._logEvent,val);logger._logEvent=createLogEventShape(bindings)}function createLogEventShape(bindings){return{ts:0,messages:[],bindings:bindings||[],level:{label:"",value:0}}}function asErrValue(err){var obj={type:err.constructor.name,msg:err.message,stack:err.stack};for(var key in err){if(obj[key]===undefined){obj[key]=err[key]}}return obj}function mock(){return{}}function passthrough(a){return a}function noop(){}function pfGlobalThisOrFallback(){function defd(o){return typeof o!=="undefined"&&o}try{if(typeof globalThis!=="undefined")return globalThis;Object.defineProperty(Object.prototype,"globalThis",{get:function(){delete Object.prototype.globalThis;return this.globalThis=this},configurable:true});return globalThis}catch(e){return defd(self)||defd(window)||defd(this)||{}}}},{"quick-format-unescaped":2}],2:[function(require,module,exports){"use strict";function tryStringify(o){try{return JSON.stringify(o)}catch(e){return'"[Circular]"'}}module.exports=format;function format(f,args,opts){var ss=opts&&opts.stringify||tryStringify;var offset=1;if(f===null){f=args[0];offset=0}if(typeof f==="object"&&f!==null){var len=args.length+offset;if(len===1)return f;var objects=new Array(len);objects[0]=ss(f);for(var index=1;index<len;index++){objects[index]=ss(args[index])}return objects.join(" ")}var argLen=args.length;if(argLen===0)return f;var x="";var str="";var a=1-offset;var lastPos=0;var flen=f&&f.length||0;for(var i=0;i<flen;){if(f.charCodeAt(i)===37&&i+1<flen){switch(f.charCodeAt(i+1)){case 100:if(a>=argLen)break;if(lastPos<i)str+=f.slice(lastPos,i);if(args[a]==null)break;str+=Number(args[a]);lastPos=i=i+2;break;case 79:case 111:case 106:if(a>=argLen)break;if(lastPos<i)str+=f.slice(lastPos,i);if(args[a]===undefined)break;var type=typeof args[a];if(type==="string"){str+="'"+args[a]+"'";lastPos=i+2;i++;break}if(type==="function"){str+=args[a].name||"<anonymous>";lastPos=i+2;i++;break}str+=ss(args[a]);lastPos=i+2;i++;break;case 115:if(a>=argLen)break;if(lastPos<i)str+=f.slice(lastPos,i);str+=String(args[a]);lastPos=i+2;i++;break;case 37:if(lastPos<i)str+=f.slice(lastPos,i);str+="%";lastPos=i+2;i++;break}++a}++i}if(lastPos===0)str=f;else if(lastPos<flen){str+=f.slice(lastPos)}while(a<argLen){x=args[a++];if(x===null||typeof x!=="object"){str+=" "+String(x)}else{str+=" "+ss(x)}}return str}},{}],3:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var colWeight=function(col){if(col<0){return-1/col}else{return-col}};exports.createPlaceList=function(lap){var list=[];for(var col=-lap;col<=lap;col++){for(var row=-lap;row<=lap;row++){if(Math.abs(col)+Math.abs(row)===lap){list.push({row:row,col:col})}}}return list.sort(function(p1,p2){var cw1=colWeight(p1.col);var cw2=colWeight(p2.col);if(cw1>cw2){return-1}if(cw1<cw2){return 1}if(cw1===cw2){if(p1.row>p2.row){return 1}else if(p1.row<p2.row){return-1}}return 0})};exports.viewer=function(lap){var list=exports.createPlaceList(lap);var log="";var _loop_1=function(row){var _loop_2=function(col){var index=list.findIndex(function(p){return p.col===col&&p.row===row});if(index==-1){log+=" "}else{log+=index.toString()}};for(var col=-lap;col<=lap;col++){_loop_2(col)}log+="\n"};for(var row=-lap;row<=lap;row++){_loop_1(row)}return log};var placeOrder=[{row:0,col:-1},{row:-1,col:0},{row:1,col:0},{row:0,col:1},{row:-1,col:-1},{row:1,col:-1},{row:0,col:-2},{row:-2,col:0},{row:2,col:0},{row:-1,col:1},{row:1,col:1},{row:0,col:2},{row:-2,col:-1},{row:2,col:-1},{row:-1,col:-2},{row:1,col:-2},{row:0,col:-3},{row:-3,col:0},{row:3,col:0},{row:-2,col:1},{row:2,col:1},{row:-1,col:2},{row:1,col:2},{row:0,col:3},{row:-3,col:-1},{row:3,col:-1},{row:-2,col:-2},{row:2,col:-2},{row:-1,col:-3},{row:1,col:-3},{row:0,col:-4},{row:-4,col:0},{row:4,col:0},{row:-3,col:1},{row:3,col:1},{row:-2,col:2},{row:2,col:2},{row:-1,col:3},{row:1,col:3},{row:0,col:4},{row:-4,col:-1},{row:4,col:-1},{row:-3,col:-2},{row:3,col:-2},{row:-2,col:-3},{row:2,col:-3},{row:-1,col:-4},{row:1,col:-4},{row:0,col:-5},{row:-5,col:0},{row:5,col:0},{row:-4,col:1},{row:4,col:1},{row:-3,col:2},{row:3,col:2},{row:-2,col:3},{row:2,col:3},{row:-1,col:4},{row:1,col:4},{row:0,col:5},{row:-5,col:-1},{row:5,col:-1},{row:-4,col:-2},{row:4,col:-2},{row:-3,col:-3},{row:3,col:-3},{row:-2,col:-4},{row:2,col:-4},{row:-1,col:-5},{row:1,col:-5},{row:0,col:-6},{row:-6,col:0},{row:6,col:0},{row:-5,col:1},{row:5,col:1},{row:-4,col:2},{row:4,col:2},{row:-3,col:3},{row:3,col:3},{row:-2,col:4},{row:2,col:4},{row:-1,col:5},{row:1,col:5},{row:0,col:6},{row:-6,col:-1},{row:6,col:-1},{row:-5,col:-2},{row:5,col:-2},{row:-4,col:-3},{row:4,col:-3},{row:-3,col:-4},{row:3,col:-4},{row:-2,col:-5},{row:2,col:-5},{row:-1,col:-6},{row:1,col:-6},{row:0,col:-7},{row:-7,col:0},{row:7,col:0},{row:-6,col:1},{row:6,col:1},{row:-5,col:2},{row:5,col:2},{row:-4,col:3},{row:4,col:3},{row:-3,col:4},{row:3,col:4},{row:-2,col:5},{row:2,col:5},{row:-1,col:6},{row:1,col:6},{row:0,col:7}];exports.getOrder=function(inp){return inp.sort(function(inp1,inp2){var index1=placeOrder.findIndex(function(p){return p.row===inp1.place.row&&p.col===inp1.place.col});var index2=placeOrder.findIndex(function(p){return p.row===inp2.place.row&&p.col===inp2.place.col});if(index1===-1){throw new Error("invalid place: "+inp1.place)}if(index2===-1){throw new Error("invalid place: "+inp2.place)}if(index1>index2){return 1}else if(index1<index2){return-1}return 0})}},{}],4:[function(require,module,exports){"use strict";var __values=this&&this.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(exports,"__esModule",{value:true});var checkInp=function(inp){var e_1,_a,e_2,_b;if(inp.friends.length<1||inp.friends.length>10){throw new Error("length of friend must be in 1..10")}try{for(var _c=__values(inp.friends),_d=_c.next();!_d.done;_d=_c.next()){var f=_d.value;checkFriend(f)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c)}finally{if(e_1)throw e_1.error}}var _e=inp.field,row=_e.row,col=_e.col,data=_e.data;if(!Number.isInteger(row)||row<1){throw new Error("field.row must be positive integer.")}if(!Number.isInteger(col)||col<1){throw new Error("field.col must be positive integer.")}if(row*col!==data.length){throw new Error("invalid field size: "+col+"*"+row+" !== "+data.length)}var allowedData=[0,1,9,10,11,12,13,14,15,16,17,18,19];try{for(var data_1=__values(data),data_1_1=data_1.next();!data_1_1.done;data_1_1=data_1.next()){var d=data_1_1.value;if(!allowedData.includes(d)){throw new Error("invalid input in field.data: "+d)}}}catch(e_2_1){e_2={error:e_2_1}}finally{try{if(data_1_1&&!data_1_1.done&&(_b=data_1.return))_b.call(data_1)}finally{if(e_2)throw e_2.error}}for(var friendIndex=0;friendIndex<inp.friends.length;friendIndex++){if(!data.includes(friendIndex+10)){throw new Error(10+friendIndex+" not in field.data")}}var _f=inp.config,turn=_f.turn,trial=_f.trial;if(!Number.isInteger(trial))throw new Error("config.trial must be integer");if(trial<=0)throw new Error("config.trial must be positive");if(!Number.isInteger(turn))throw new Error("config.turn must be integer");if(turn<=0)throw new Error("config.turn must be positive")};var checkFriend=function(f){if(!Number.isInteger(f.lv)||f.lv<1||f.lv>99){throw new Error("lv must be in 1..99")}if(f.hpDope&&(!Number.isInteger(f.hpDope)||f.hpDope<0)){throw new Error("hpDope must be non-negative integer.")}if(f.atkDope&&(!Number.isInteger(f.atkDope)||f.atkDope<0)){throw new Error("atkDope must be non-negative integer.")}if(f.weakenAtk&&![0,1,2,3,4,5,6,7,8,9].includes(f.weakenAtk)){throw new Error("weakenAtk must be in [0, 1, 2, 3, 4, 5, 6, 8, 9].")}if(f.weakenDef&&![0,1,2,3,4,5,6,7,8,9].includes(f.weakenDef)){throw new Error("weakenDef must be in [0, 1, 2, 3, 4, 5, 6].")}if(f.isSticked!==undefined&&!f.isSticked&&f.name!=="ホイミスライム"){throw new Error(f.name+' must be "isSticked: true"')}};exports.default=checkInp},{}],5:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:true});var pino_1=__importDefault(require("pino"));exports.DefaultNumSumoLimit=9;exports.logger=pino_1.default({level:"silent",base:null,timestamp:false});exports.defaultProbabilityConf={basic:{attack:.92,arrow:.88,divide:.25},hoimin:{skill:.3553,attack:.3,move:1,moveTurn:50},kinoko:{skill:.15},merumon:{skill:.1},mekira:{skill:.33},haeru:{skill:.26},haneji:{skill:.26},mister:{skill:.12},isshi:{skill:.1},flida:{skill:.22},rangas:{skill:.22},rayman:{skill:.2},lovelace:{skill:.2},dragosu:{skill:.2},drataru:{skill:.2},lily:{skill:.5,range:10},niper:{skill:.37,range:10},drango:{skill:.25,range:Infinity},kororin:{omoikkiri:.2,tsukon:.2},emily:{omoikkiri:.2,tsukon:.2},baburusu:{skill:.5}};exports.monstersSkillAdjacentWOCorner=["おばけキノコ","メイジももんじゃ","メイジキメラ","ハエまどう","はねせんにん","フライングデビル","ランガー","ミステリードール","いしにんぎょう"];exports.monstersSkillAdjacentWCorner=["スライムブレス","ドラゴスライム","ドラゴメタル"];exports.monstersSkillAdjacent=exports.monstersSkillAdjacentWOCorner.concat(exports.monstersSkillAdjacentWCorner)},{pino:1}],6:[function(require,module,exports){"use strict";var __values=this&&this.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};var __read=this&&this.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:true});var unit_1=require("./unit");var scsField_1=require("./scsField");var config_1=require("./config");var checkInp_1=__importDefault(require("./checkInp"));var mathFunctions_1=require("./mathFunctions");var randint=function(n){return Math.floor(Math.random()*Math.floor(n))};var addPlace=function(place1,place2){return{row:place1.row+place2.row,col:place1.col+place2.col}};exports.overWriteDefaultProbabilityConfig=function(conf){var e_1,_a,e_2,_b;var c=config_1.defaultProbabilityConf;try{try{for(var _c=__values(Object.keys(conf)),_d=_c.next();!_d.done;_d=_c.next()){var k=_d.value;var values=conf[k];try{for(var _e=(e_2=void 0,__values(Object.keys(values))),_f=_e.next();!_f.done;_f=_e.next()){var kk=_f.value;var value=values[kk];c[k][kk]=value;config_1.logger.debug("pConf."+k+"."+kk+" was overwrited: "+value)}}catch(e_2_1){e_2={error:e_2_1}}finally{try{if(_f&&!_f.done&&(_b=_e.return))_b.call(_e)}finally{if(e_2)throw e_2.error}}}}catch(e_1_1){e_1={error:e_1_1}}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c)}finally{if(e_1)throw e_1.error}}}catch(e){console.log("invalid input in config.pConf");throw e}return c};exports.summarizeSCSOutputs=function(outputs){var e_3,_a,e_4,_b;var countOfKilledFriends=new Array(outputs[0].exp.perMonster.length).fill(0);try{for(var outputs_1=__values(outputs),outputs_1_1=outputs_1.next();!outputs_1_1.done;outputs_1_1=outputs_1.next()){var output=outputs_1_1.value;try{for(var _c=(e_4=void 0,__values(output.result.orderOfKilledFriends)),_d=_c.next();!_d.done;_d=_c.next()){var order=_d.value;countOfKilledFriends[order]++}}catch(e_4_1){e_4={error:e_4_1}}finally{try{if(_d&&!_d.done&&(_b=_c.return))_b.call(_c)}finally{if(e_4)throw e_4.error}}}}catch(e_3_1){e_3={error:e_3_1}}finally{try{if(outputs_1_1&&!outputs_1_1.done&&(_a=outputs_1.return))_a.call(outputs_1)}finally{if(e_3)throw e_3.error}}return{result:{finishState:{success:outputs.filter(function(o){return o.result.finishState==="success"}).length,killed:outputs.filter(function(o){return o.result.finishState==="killed"}).length,genocided:outputs.filter(function(o){return o.result.finishState==="genocided"}).length},turnPassed:{mean:mathFunctions_1.mean(outputs.map(function(o){return o.result.turnPassed})),std:mathFunctions_1.std(outputs.map(function(o){return o.result.turnPassed}))},countOfKilledFriends:countOfKilledFriends},exp:{total:{mean:mathFunctions_1.mean(outputs.map(function(o){return o.exp.total})),std:mathFunctions_1.std(outputs.map(function(o){return o.exp.total}))},perMonster:mathFunctions_1.getMeanAndStdFromArray(outputs.map(function(o){return o.exp.perMonster}))},loss:{action:mathFunctions_1.getMeanAndStdFromArray(outputs.map(function(o){return o.loss.action})),division:mathFunctions_1.getMeanAndStdFromArray(outputs.map(function(o){return o.loss.division}))}}};var Manager=function(){function Manager(inp){this.friends=[];this.enemys=[];this.killCount=0;this.turnNow=0;this.field=new scsField_1.SCSField({row:0,col:0,data:[]});checkInp_1.default(inp);this.inp=inp;this.pConf=inp.config.pConf?exports.overWriteDefaultProbabilityConfig(inp.config.pConf):config_1.defaultProbabilityConf;this.config=this.inp.config;this.trialOutputs=[]}Manager.prototype.init=function(){var e_5,_a,e_6,_b;this.friends=[];this.enemys=[];this.killCount=0;this.turnNow=0;this.field=new scsField_1.SCSField(this.inp.field);var _loop_1=function(order,friend){var FieldIndex=this_1.inp.field.data.findIndex(function(m){return m===order+10});var place={row:Math.floor(FieldIndex/this_1.inp.field.col),col:FieldIndex%this_1.inp.field.col};this_1.friends.push(new unit_1.Friend(friend,order,place,this_1.pConf))};var this_1=this;try{for(var _c=__values(this.inp.friends.entries()),_d=_c.next();!_d.done;_d=_c.next()){var _e=__read(_d.value,2),order=_e[0],friend=_e[1];_loop_1(order,friend)}}catch(e_5_1){e_5={error:e_5_1}}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c)}finally{if(e_5)throw e_5.error}}var enemyFieldIndex=this.inp.field.data.reduce(function(accumulator,currentValue,index){if(currentValue===9){accumulator.push(index)}return accumulator},[]);try{for(var enemyFieldIndex_1=__values(enemyFieldIndex),enemyFieldIndex_1_1=enemyFieldIndex_1.next();!enemyFieldIndex_1_1.done;enemyFieldIndex_1_1=enemyFieldIndex_1.next()){var FieldIndex=enemyFieldIndex_1_1.value;var place={row:Math.floor(FieldIndex/this.inp.field.col),col:FieldIndex%this.inp.field.col};this.addEnemy(place,1)}}catch(e_6_1){e_6={error:e_6_1}}finally{try{if(enemyFieldIndex_1_1&&!enemyFieldIndex_1_1.done&&(_b=enemyFieldIndex_1.return))_b.call(enemyFieldIndex_1)}finally{if(e_6)throw e_6.error}}};Manager.prototype.divide=function(sumo){if(sumo.isSealed){config_1.logger.debug("divided but [row: "+sumo.place.row+", col: "+sumo.place.col+"] was sealed");return false}var numSumoLimit=this.config.numSumoLimit?this.config.numSumoLimit:config_1.DefaultNumSumoLimit;if(this.enemys.length>=numSumoLimit){config_1.logger.debug("divided but number of enemys reached maximum: "+numSumoLimit);return false}var dplaceList=[{row:-1,col:0},{row:-1,col:-1},{row:0,col:-1},{row:1,col:-1},{row:1,col:0},{row:1,col:1},{row:0,col:1},{row:-1,col:1}];var initialIndex=randint(4)*2;for(var relativeIndex=0;relativeIndex<8;relativeIndex++){var index=relativeIndex+initialIndex;index=index>7?index-8:index;var place=addPlace(sumo.place,dplaceList[index]);if(this.field.getField(place)===0){this.addEnemy(place);return true}}return false};Manager.prototype.getEnemyByNumber=function(num){return this.enemys.filter(function(e){return e.num===num})[0]};Manager.prototype.addEnemy=function(place,probability){if(probability===void 0){probability=this.pConf.basic.divide}if(Math.random()<probability){this.enemys.push(new unit_1.Enemy(place,this.killCount,this.pConf));this.field.setField(place,this.killCount+20);this.killCount+=1;config_1.logger.debug("divided into ["+place.row+", "+place.col+"]")}};Manager.prototype.runAllTrial=function(){for(var trial=0;trial<this.config.trial;trial++){this.trial();this.trialOutputs.push(this.toJson())}};Manager.prototype.trial=function(){var e_7,_a;this.init();for(var turn=0;turn<this.config.turn;turn++){this.turn();this.turnNow+=1;try{for(var _b=(e_7=void 0,__values(this.friends)),_c=_b.next();!_c.done;_c=_b.next()){var friend=_c.value;if(friend.chp<0){return}}}catch(e_7_1){e_7={error:e_7_1}}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b)}finally{if(e_7)throw e_7.error}}if(this.enemys.length===0){return}}this.killCount-=this.enemys.length};Manager.prototype.turn=function(){this.turnEnemy();this.turnFriend()};Manager.prototype.turnEnemy=function(){var e_8,_a;try{for(var _b=__values(this.enemys),_c=_b.next();!_c.done;_c=_b.next()){var enemy=_c.value;this.actionEnemy(enemy)}}catch(e_8_1){e_8={error:e_8_1}}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b)}finally{if(e_8)throw e_8.error}}};Manager.prototype.actionEnemy=function(enemy){var targets=this.field.findTargets(enemy.place);if(targets.length!==0){var target=targets[randint(targets.length)];var friend=this.friends[target-10];var result=enemy.attack(friend);if(friend.name==="スモールグール"&&result){this.divide(this.friends[target-10])}return}var emptyPlaces=this.field.findVacants(enemy.place,false);if(emptyPlaces.length!==0){var place=emptyPlaces[randint(emptyPlaces.length)];this.field.setField(enemy.place,0);this.field.setField(place,enemy.num+20);enemy.place=place}};Manager.prototype.turnFriend=function(){var e_9,_a,e_10,_b;try{for(var _c=__values([true,false]),_d=_c.next();!_d.done;_d=_c.next()){var speed=_d.value;try{for(var _e=(e_10=void 0,__values(this.friends)),_f=_e.next();!_f.done;_f=_e.next()){var friend=_f.value;if(speed||friend.doubleSpeed){var isActed=this.actionFriend(friend);if(!isActed){friend.actionLossCount+=1}friend.naturalRecovery()}}}catch(e_10_1){e_10={error:e_10_1}}finally{try{if(_f&&!_f.done&&(_b=_e.return))_b.call(_e)}finally{if(e_10)throw e_10.error}}}}catch(e_9_1){e_9={error:e_9_1}}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c)}finally{if(e_9)throw e_9.error}}};Manager.prototype.actionFriend=function(f){if(f.isSealed){return this.actionNormal(f)}else if(f.name==="キラーマシン"||f.name==="さそりかまきり"){return this.actionKillerMachine(f)}else if(f.name==="ホイミスライム"){return this.actionHoimiSlime(f)}else if(f.name==="ドラゴン"){return this.actionDragon(f)}else if(f.name==="リリパット"||f.name==="ドッグスナイパー"){return this.actionArrow(f)}else if(config_1.monstersSkillAdjacent.includes(f.name)){return this.actionSkillAdjacent(f)}else{return this.actionNormal(f)}};Manager.prototype.removeEnemy=function(enemy){this.field.setField(enemy.place,0);this.enemys=this.enemys.filter(function(e){return e!==enemy})};Manager.prototype.attack=function(friend,enemy,fixedDamage){if(fixedDamage===void 0){fixedDamage=0}var result=friend.attack(enemy,fixedDamage);if(enemy.chp<=0){friend.getExp();this.removeEnemy(enemy);return"killed"}else if(result){var wasAbleToDivide=this.divide(enemy);if(!wasAbleToDivide){friend.divisionLossCount+=1}return"survived"}return"missed"};Manager.prototype.actionNormal=function(f){var targets=this.field.findTargets(f.place);if(targets.length!==0){var target=targets[randint(targets.length)];var enemy=this.getEnemyByNumber(target-20);this.attack(f,enemy);return true}return false};Manager.prototype.actionSkillAdjacent=function(f){config_1.logger.debug("# monster with skill adjacent");var wCorner=config_1.monstersSkillAdjacentWCorner.includes(f.name);var skillTargets=this.field.findTargets(f.place,wCorner);if(skillTargets.length!==0){var target=skillTargets[randint(skillTargets.length)];var enemy=this.getEnemyByNumber(target-20);switch(f.name){case"おばけキノコ":if(Math.random()<this.pConf.kinoko.skill){enemy.weakenAtk+=1;enemy.setAtk();return true}break;case"メイジももんじゃ":if(Math.random()<this.pConf.merumon.skill){enemy.isSealed=true;return true}break;case"メイジキメラ":if(Math.random()<this.pConf.mekira.skill){enemy.isSealed=true;return true}break;case"ハエまどう":if(Math.random()<this.pConf.haeru.skill){enemy.chp=Math.ceil(enemy.chp/4);return true}break;case"はねせんにん":if(Math.random()<this.pConf.haneji.skill){enemy.chp=Math.ceil(enemy.chp/2);return true}break;case"フライングデビル":if(Math.random()<f.pConf.flida.skill){this.attack(f,enemy,25);return true}break;case"ランガー":if(Math.random()<f.pConf.rangas.skill){this.attack(f,enemy,25);return true}break;case"キングマーマン":if(Math.random()<f.pConf.rangas.skill){this.attack(f,enemy,25);return true}break;case"ミステリードール":if(Math.random()<f.pConf.mister.skill){if(randint(2)===0){enemy.chp=Math.ceil(enemy.chp/2)}else{enemy.weakenAtk+=1;enemy.setAtk()}return true}break;case"いしにんぎょう":if(Math.random()<f.pConf.isshi.skill){if(randint(2)===0){enemy.chp=1}else{enemy.weakenAtk+=1;enemy.setAtk()}return true}break;case"スライムブレス":if(Math.random()<f.pConf.lovelace.skill){enemy.chp-=10;if(enemy.chp<=0){f.getExp();this.removeEnemy(enemy)}return true}break;case"ドラゴスライム":if(Math.random()<f.pConf.dragosu.skill){enemy.chp-=10;if(enemy.chp<=0){f.getExp();this.removeEnemy(enemy)}return true}break;case"ドラゴメタル":if(Math.random()<f.pConf.drataru.skill){enemy.chp-=20;if(enemy.chp<=0){f.getExp();this.removeEnemy(enemy)}return true}break;default:throw new Error("skill not implemented: "+f.name)}}return this.actionNormal(f)};Manager.prototype.actionArrow=function(f){config_1.logger.debug("# monster with arrow skill");var skillInfo=f.name==="リリパット"?this.pConf.lily:this.pConf.niper;var arrowPower=f.name==="リリパット"?0:3;var num=this.field.findLineTarget(f.place,skillInfo.skill,skillInfo.range);if(num===0){config_1.logger.debug("  => skill not triggered or target not found");return this.actionNormal(f)}if(Math.random()>this.pConf.basic.arrow){config_1.logger.debug("  => but missed");return true}config_1.logger.debug("  => targetNumber: "+num);var target=num<20?this.friends[num-10]:this.getEnemyByNumber(num-20);config_1.logger.debug("    - target: "+num+" at ["+target.place.row+", "+target.place.col+"]");var damage=f.atk+Math.round(f.atk*(arrowPower-3)/16);damage*=Math.pow(35/36,target.def);damage=Math.round(damage*(Math.random()/4+7/8));target.chp-=damage;config_1.logger.debug("    - damage: "+damage);if(num>=20&&target.chp<0){f.getExp();this.removeEnemy(this.getEnemyByNumber(num-20));return true}if(target.name!=="スモールグール"){return true}var wasAbleToDivide=this.divide(target);if(!wasAbleToDivide){f.divisionLossCount+=1}return true};Manager.prototype.actionDragon=function(f){config_1.logger.debug("# monster: Dragon");var skillInfo=this.pConf.drango;var num=this.field.findLineTarget(f.place,skillInfo.skill,skillInfo.range);if(num===0){config_1.logger.debug("  => skill not triggered or target not found");return this.actionNormal(f)}config_1.logger.debug("  => targetNumber: "+num);var target=num<20?this.friends[num-10]:this.getEnemyByNumber(num-20);config_1.logger.debug("    - target: "+num+" at ["+target.place.row+", "+target.place.col+"]");target.chp-=20;if(num>=20&&target.chp<0){f.getExp();this.removeEnemy(this.getEnemyByNumber(num-20))}return true};Manager.prototype.actionKillerMachine=function(f){var targets=this.field.findTargets(f.place);if(targets.length!==0){var target=targets[randint(targets.length)];var enemy=this.getEnemyByNumber(target-20);var result=this.attack(f,enemy);if(result==="killed")return true;this.attack(f,enemy);return true}return false};Manager.prototype.actionHoimiSlime=function(f){var e_11,_a,e_12,_b,e_13,_c,e_14,_d;config_1.logger.debug("# monster hoimin");var returnValue=false;var hoimiTargets=[];try{for(var _e=__values([-1,0,1]),_f=_e.next();!_f.done;_f=_e.next()){var drow=_f.value;try{for(var _g=(e_12=void 0,__values([-1,0,1])),_h=_g.next();!_h.done;_h=_g.next()){var dcol=_h.value;var place=addPlace(f.place,{row:drow,col:dcol});var number=this.field.getField(place);if(drow===0&&dcol===0){continue}if(10<=number&&number<=19){var unit=this.friends[number-10];if(unit.chp<unit.mhp){hoimiTargets.push(unit)}}else if(number>=20){var unit=this.getEnemyByNumber(number-20);if(unit.chp<unit.mhp){hoimiTargets.push(unit)}}}}catch(e_12_1){e_12={error:e_12_1}}finally{try{if(_h&&!_h.done&&(_b=_g.return))_b.call(_g)}finally{if(e_12)throw e_12.error}}}}catch(e_11_1){e_11={error:e_11_1}}finally{try{if(_f&&!_f.done&&(_a=_e.return))_a.call(_e)}finally{if(e_11)throw e_11.error}}config_1.logger.debug("Hoimi targets: "+hoimiTargets.length);returnValue=returnValue||!!hoimiTargets.length;var execSkill=false;for(var t=0;t<hoimiTargets.length;t++){if(Math.random()<this.pConf.hoimin.skill){execSkill=true;break}}if(execSkill){config_1.logger.debug("  => did Hoimi");try{for(var hoimiTargets_1=__values(hoimiTargets),hoimiTargets_1_1=hoimiTargets_1.next();!hoimiTargets_1_1.done;hoimiTargets_1_1=hoimiTargets_1.next()){var target=hoimiTargets_1_1.value;config_1.logger.debug("  - target@["+target.place.row+", "+target.place.col+"]");target.chp+=25;if(target.chp>target.mhp){target.chp=target.mhp}}}catch(e_13_1){e_13={error:e_13_1}}finally{try{if(hoimiTargets_1_1&&!hoimiTargets_1_1.done&&(_c=hoimiTargets_1.return))_c.call(hoimiTargets_1)}finally{if(e_13)throw e_13.error}}return returnValue}var attackTargets=this.field.findTargets(f.place);returnValue=returnValue||!!attackTargets.length;config_1.logger.debug("Attack targets: "+attackTargets.length);try{for(var attackTargets_1=__values(attackTargets),attackTargets_1_1=attackTargets_1.next();!attackTargets_1_1.done;attackTargets_1_1=attackTargets_1.next()){var enemyId=attackTargets_1_1.value;if(Math.random()<this.pConf.hoimin.attack){var enemy=this.getEnemyByNumber(enemyId-20);this.attack(f,enemy);config_1.logger.debug("  => attacked : @["+enemy.place.row+", "+enemy.place.col+"]");return returnValue}config_1.logger.debug("not attacked.")}}catch(e_14_1){e_14={error:e_14_1}}finally{try{if(attackTargets_1_1&&!attackTargets_1_1.done&&(_d=attackTargets_1.return))_d.call(attackTargets_1)}finally{if(e_14)throw e_14.error}}var vacantTargets=this.field.findVacants(f.place,false);returnValue=returnValue||!!vacantTargets.length;config_1.logger.debug("Vacant places: "+vacantTargets.length);if(!f.isSticked&&Math.random()<this.pConf.hoimin.move&&this.turnNow>this.pConf.hoimin.moveTurn&&!!vacantTargets.length){var newPlace=vacantTargets[randint(vacantTargets.length)];config_1.logger.debug("  => moved from ["+f.place.row+", "+f.place.col+"] to ["+newPlace.row+", "+newPlace.col+"]");this.field.setField(f.place,0);this.field.setField(newPlace,10+this.friends.indexOf(f));f.place=newPlace;return returnValue}return returnValue};Manager.prototype.toJson=function(){var _this=this;var finishState="success";if(this.turnNow<this.config.turn){if(this.enemys.length===0){finishState="genocided"}else{finishState="killed"}}return{result:{finishState:finishState,turnPassed:this.turnNow,orderOfKilledFriends:this.friends.filter(function(f){return f.chp<0}).map(function(f){return f.order})},exp:{total:this.killCount*22,perTurn:this.killCount*22/this.turnNow,perMonster:this.friends.map(function(f){return f.killCount*22}),perMonsterPerTurn:this.friends.map(function(f){return f.killCount*22/_this.turnNow})},loss:{action:this.friends.map(function(f){return f.actionLossCount}),division:this.friends.map(function(f){return f.divisionLossCount})}}};Manager.prototype.summarizeOutputs=function(){return exports.summarizeSCSOutputs(this.trialOutputs)};return Manager}();exports.Manager=Manager},{"./checkInp":4,"./config":5,"./mathFunctions":7,"./scsField":9,"./unit":11}],7:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.sum=function(arr){return arr.reduce(function(prev,current){return prev+current})};exports.mean=function(arr){return exports.sum(arr)/arr.length};exports.std=function(arr){var m=exports.mean(arr);var variance=arr.map(function(current){return Math.pow(current-m,2)}).reduce(function(prev,current){return prev+current})/arr.length;return Math.sqrt(variance)};exports.getMeanAndStdFromArray=function(arrs){var arrM=[];var arrS=[];var _loop_1=function(index){arrM.push(exports.mean(arrs.map(function(arr){return arr[index]})));arrS.push(exports.std(arrs.map(function(arr){return arr[index]})))};for(var index=0;index<arrs[0].length;index++){_loop_1(index)}return{mean:arrM,std:arrS}}},{}],8:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.sampleInputs={"4キラーマ等速":{friends:[{name:"キラーマシン",lv:13,weakenAtk:6},{name:"キラーマシン",lv:13,weakenAtk:6},{name:"キラーマシン",lv:13,weakenAtk:6},{name:"キラーマシン",lv:13,weakenAtk:6},{name:"ホイミスライム",lv:30},{name:"キラーマシン",lv:13},{name:"キラーマシン",lv:13},{name:"キラーマシン",lv:13},{name:"スモールグール",lv:30},{name:"ホイミスライム",lv:30}],field:{row:10,col:10,data:[1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,19,0,0,0,1,1,1,1,1,10,11,12,13,14,1,1,1,1,1,9,9,9,9,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,15,16,17,18,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},config:{turn:1500,trial:100}},"4キラーマ倍速":{friends:[{name:"キラーマシン",lv:13,doubleSpeed:true,weakenAtk:6},{name:"キラーマシン",lv:13,doubleSpeed:true,weakenAtk:6},{name:"キラーマシン",lv:13,doubleSpeed:true,weakenAtk:6},{name:"キラーマシン",lv:13,doubleSpeed:true,weakenAtk:6},{name:"ホイミスライム",lv:30,doubleSpeed:true},{name:"キラーマシン",lv:13,doubleSpeed:true},{name:"キラーマシン",lv:13,doubleSpeed:true},{name:"キラーマシン",lv:13,doubleSpeed:true},{name:"スモールグール",lv:30,doubleSpeed:true},{name:"ホイミスライム",lv:30,doubleSpeed:true}],field:{row:10,col:10,data:[1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,19,0,0,0,1,1,1,1,1,10,11,12,13,14,1,1,1,1,1,9,9,9,9,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,15,16,17,18,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},config:{turn:1500,trial:100}},"3キラーマ等速":{friends:[{name:"キラーマシン",lv:13,weakenAtk:6},{name:"キラーマシン",lv:13,weakenAtk:6},{name:"キラーマシン",lv:13,weakenAtk:6},{name:"キラーマシン",lv:13},{name:"ホイミスライム",lv:30},{name:"キラーマシン",lv:13},{name:"キラーマシン",lv:13},{name:"キラーマシン",lv:13},{name:"スモールグール",lv:30},{name:"ホイミスライム",lv:30}],field:{row:10,col:10,data:[1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,19,0,0,1,1,1,1,1,1,10,11,12,14,1,1,1,1,1,1,0,0,9,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,15,16,17,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,13,18,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},config:{turn:1500,trial:100}},"キノコ育成":{friends:[{name:"キラーマシン",lv:13,weakenAtk:6},{name:"キラーマシン",lv:13,weakenAtk:6},{name:"キラーマシン",lv:13,weakenAtk:6},{name:"キラーマシン",lv:13},{name:"ホイミスライム",lv:30},{name:"キラーマシン",lv:13},{name:"キラーマシン",lv:13},{name:"おばけキノコ",lv:20},{name:"スモールグール",lv:30},{name:"ホイミスライム",lv:30}],field:{row:10,col:10,data:[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,17,19,0,0,0,1,1,1,1,0,10,11,12,13,14,1,1,1,1,0,0,0,0,9,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,15,16,18,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},config:{turn:1500,trial:100}},"ランダムウォーク":{friends:[{name:"スモールグール",lv:99,isSealed:true}],field:{row:10,col:10,data:[1,1,1,1,1,1,1,1,1,1,1,9,0,0,0,0,0,1,9,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,10,1,1,1,1,1,1,1,1,1,1,1]},config:{turn:1500,trial:100}},"半ホイミン倍速":{friends:[{name:"キラーマシン",lv:13,doubleSpeed:true,weakenAtk:6},{name:"キラーマシン",lv:13,doubleSpeed:true,weakenAtk:6},{name:"キラーマシン",lv:13,doubleSpeed:true,weakenAtk:6},{name:"キラーマシン",lv:13,doubleSpeed:true,weakenAtk:6},{name:"キラーマシン",lv:13,doubleSpeed:true,weakenAtk:6},{name:"キラーマシン",lv:13,doubleSpeed:true},{name:"キラーマシン",lv:13,doubleSpeed:true},{name:"スモールグール",lv:30,doubleSpeed:true},{name:"ホイミスライム",lv:30,doubleSpeed:true},{name:"ホイミスライム",lv:30,doubleSpeed:true,isSticked:false}],field:{row:10,col:10,data:[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,19,0,1,1,1,1,1,1,10,11,12,13,14,1,1,1,1,1,0,0,0,0,9,9,1,1,1,1,0,0,0,0,0,1,1,1,1,1,15,16,17,18,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},config:{turn:1500,trial:100}},"ドッグスナイパー":{friends:[{name:"ドッグスナイパー",lv:99,doubleSpeed:true}],field:{row:5,col:5,data:[1,1,1,1,1,1,1,1,9,1,1,1,0,1,1,1,10,1,1,1,1,1,1,1,1]},config:{turn:100,trial:1}}}},{}],9:[function(require,module,exports){"use strict";var __read=this&&this.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var __spread=this&&this.__spread||function(){for(var ar=[],i=0;i<arguments.length;i++)ar=ar.concat(__read(arguments[i]));return ar};var __values=this&&this.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(exports,"__esModule",{value:true});var SCSField=function(){function SCSField(fieldInp){var col=fieldInp.col;var row=fieldInp.row;var data=fieldInp.data;this.col=col;this.row=row;this.data=[];for(var irow=0;irow<row;irow++){this.data.push(data.slice(irow*col,(irow+1)*col))}}SCSField.prototype.setField=function(place,num){this.data[place.row][place.col]=num};SCSField.prototype.getField=function(place){return this.data[place.row][place.col]};SCSField.prototype.findTargets=function(place,withCorner){var e_1,_a,e_2,_b;if(withCorner===void 0){withCorner=false}var myNumber=this.getField(place);var rowMe=place.row;var colMe=place.col;var isTarget=myNumber>=20?function(num){return __spread(Array(10)).map(function(_,i){return i+10}).includes(num)}:function(num){return num>=20};var targets=[];try{for(var _c=__values([-1,0,1]),_d=_c.next();!_d.done;_d=_c.next()){var drow=_d.value;try{for(var _e=(e_2=void 0,__values([-1,0,1])),_f=_e.next();!_f.done;_f=_e.next()){var dcol=_f.value;var tPlace={row:rowMe+drow,col:colMe+dcol};var tNumber=this.getField(tPlace);if(!isTarget(tNumber)){continue}if(dcol*drow===0){targets.push(tNumber);continue}var numberUD=this.data[rowMe+drow][colMe];var numberLR=this.data[rowMe][colMe+dcol];var isPlaceKado=numberUD===1||numberLR===1;if(!isPlaceKado||withCorner){targets.push(tNumber)}}}catch(e_2_1){e_2={error:e_2_1}}finally{try{if(_f&&!_f.done&&(_b=_e.return))_b.call(_e)}finally{if(e_2)throw e_2.error}}}}catch(e_1_1){e_1={error:e_1_1}}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c)}finally{if(e_1)throw e_1.error}}return targets};SCSField.prototype.findVacants=function(place,withCorner){var e_3,_a,e_4,_b;if(withCorner===void 0){withCorner=false}var myNumber=this.getField(place);var rowMe=place.row;var colMe=place.col;var isTarget=function(num){return num===0};var targets=[];try{for(var _c=__values([-1,0,1]),_d=_c.next();!_d.done;_d=_c.next()){var drow=_d.value;try{for(var _e=(e_4=void 0,__values([-1,0,1])),_f=_e.next();!_f.done;_f=_e.next()){var dcol=_f.value;var tPlace={row:rowMe+drow,col:colMe+dcol};var tNumber=this.getField(tPlace);if(!isTarget(tNumber)){continue}if(dcol*drow===0){targets.push(tPlace);continue}var numberUD=this.data[rowMe+drow][colMe];var numberLR=this.data[rowMe][colMe+dcol];var isPlaceKado=numberUD===1||numberLR===1;if(!isPlaceKado||withCorner){targets.push(tPlace)}}}catch(e_4_1){e_4={error:e_4_1}}finally{try{if(_f&&!_f.done&&(_b=_e.return))_b.call(_e)}finally{if(e_4)throw e_4.error}}}}catch(e_3_1){e_3={error:e_3_1}}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c)}finally{if(e_3)throw e_3.error}}return targets};SCSField.prototype.findLineTarget=function(place,probability,range){if(range===void 0){range=Infinity}var myNumber=this.getField(place);var rowMe=place.row;var colMe=place.col;var target=-1;var isTarget=function(num){return num>=20};target=-1;for(var col=colMe-1;col>=Math.max(0,colMe-range);col--){var numField=this.getField({row:rowMe,col:col});if(numField===1)break;if(target===-1&&numField>9)target=numField;if(isTarget(numField)&&Math.random()<probability)return target}target=-1;for(var dd=1;colMe-dd>=Math.max(0,colMe-range)&&rowMe-dd>=Math.max(0,rowMe-range);dd++){var numField=this.getField({row:rowMe-dd,col:colMe-dd});if(numField===1)break;if(target===-1&&numField>9)target=numField;if(isTarget(numField)&&Math.random()<probability)return target}target=-1;for(var row=rowMe-1;row>=Math.max(0,rowMe-range);row--){var numField=this.getField({row:row,col:colMe});if(numField===1)break;if(target===-1&&numField>9)target=numField;if(isTarget(numField)&&Math.random()<probability)return target}target=-1;for(var dd=1;colMe+dd<=Math.min(this.col,colMe+range)&&rowMe-dd>=Math.max(0,rowMe-range);dd++){var numField=this.getField({row:rowMe-dd,col:colMe+dd});if(numField===1)break;if(target===-1&&numField>9)target=numField;if(isTarget(numField)&&Math.random()<probability)return target}target=-1;for(var col=colMe+1;col<=Math.min(this.col,colMe+range);col++){var numField=this.getField({row:rowMe,col:col});if(numField===1)break;if(target===-1&&numField>9)target=numField;if(isTarget(numField)&&Math.random()<probability)return target}target=-1;for(var dd=1;colMe+dd<=Math.min(this.col,colMe+range)&&rowMe+dd<=Math.min(this.row,rowMe+range);dd++){var numField=this.getField({row:rowMe+dd,col:colMe+dd});if(numField===1)break;if(target===-1&&numField>9)target=numField;if(isTarget(numField)&&Math.random()<probability)return target}target=-1;for(var row=rowMe+1;row<=Math.min(this.row,rowMe+range);row++){var numField=this.getField({row:row,col:colMe});if(numField===1)break;if(target===-1&&numField>9)target=numField;if(isTarget(numField)&&Math.random()<probability)return target}target=-1;for(var dd=1;colMe-dd>=Math.max(0,colMe-range)&&rowMe+dd<=Math.min(this.row,rowMe+range);dd++){var numField=this.getField({row:rowMe+dd,col:colMe-dd});if(numField===1)break;if(target===-1&&numField>9)target=numField;if(isTarget(numField)&&Math.random()<probability)return target}return 0};SCSField.prototype.show=function(){var e_5,_a,e_6,_b;var string="";try{for(var _c=__values(this.data),_d=_c.next();!_d.done;_d=_c.next()){var row=_d.value;try{for(var row_1=(e_6=void 0,__values(row)),row_1_1=row_1.next();!row_1_1.done;row_1_1=row_1.next()){var mass=row_1_1.value;if(mass===0){string+=" "}else if(mass===1){string+="#"}else if(mass<20){string+=(mass-10).toString(10)}else{string+="*"}}}catch(e_6_1){e_6={error:e_6_1}}finally{try{if(row_1_1&&!row_1_1.done&&(_b=row_1.return))_b.call(row_1)}finally{if(e_6)throw e_6.error}}string+="\n"}}catch(e_5_1){e_5={error:e_5_1}}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c)}finally{if(e_5)throw e_5.error}}return string};return SCSField}();exports.SCSField=SCSField},{}],10:[function(require,module,exports){"use strict";var __assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign.apply(this,arguments)};Object.defineProperty(exports,"__esModule",{value:true});var GrowType;(function(GrowType){GrowType[GrowType["FutsuSojuku"]=0]="FutsuSojuku";GrowType[GrowType["KogekiSojuku"]=1]="KogekiSojuku";GrowType[GrowType["BougyoSojuku"]=2]="BougyoSojuku";GrowType[GrowType["BannoBansei"]=3]="BannoBansei";GrowType[GrowType["KogekiBansei"]=4]="KogekiBansei";GrowType[GrowType["BougyoBansei"]=5]="BougyoBansei";GrowType[GrowType["KogekiTokusyu"]=6]="KogekiTokusyu";GrowType[GrowType["SyubiTokusyu"]=7]="SyubiTokusyu"})(GrowType||(GrowType={}));var getEXP=function(g,lv){switch(g){case GrowType.FutsuSojuku:return[0,3,10,30,50,100,150,200,300,500,800,1e3,1200,1500,1800,2e3,2500,3e3,4e3,5e3,6500,8e3,1e4,13e3,16e3,2e4,25e3,3e4,36e3,42e3,48e3,54e3,6e4,7e4,8e4,9e4,1e5,115e3,13e4,145e3,16e4,175e3,2e5,23e4,26e4,29e4,32e4,35e4,38e4,41e4,44e4,47e4,5e5,53e4,56e4,59e4,62e4,65e4,68e4,71e4,75e4,79e4,83e4,87e4,91e4,95e4,99e4,103e4,107e4,112e4,117e4,122e4,127e4,132e4,137e4,142e4,147e4,152e4,157e4,162e4,167e4,172e4,177e4,182e4,188e4,194e4,2e6,206e4,212e4,218e4,224e4,23e5,236e4,242e4,3e6,5e6,7e6,9e6,999e4][lv-1];case GrowType.KogekiSojuku:return[0,10,30,60,120,160,300,500,750,1e3,1250,1600,2e3,2600,3200,4e3,5e3,6500,8e3,9500,11e3,13e3,16e3,19e3,22e3,25e3,28e3,31e3,36e3,42e3,48e3,54e3,6e4,7e4,8e4,9e4,1e5,115e3,13e4,145e3,16e4,175e3,2e5,23e4,26e4,29e4,32e4,35e4,38e4,41e4,44e4,47e4,5e5,53e4,56e4,59e4,62e4,65e4,68e4,71e4,75e4,79e4,83e4,87e4,91e4,95e4,99e4,103e4,107e4,112e4,117e4,122e4,127e4,132e4,137e4,142e4,147e4,152e4,157e4,162e4,167e4,172e4,177e4,182e4,188e4,194e4,2e6,206e4,212e4,218e4,224e4,23e5,236e4,242e4,3e6,5e6,7e6,9e6,999e4][lv-1];case GrowType.BougyoSojuku:return[0,35,100,300,600,1e3,1500,2e3,2500,3e3,3500,4e3,4500,5e3,6e3,7e3,8e3,9e3,1e4,11e3,13e3,15e3,17e3,2e4,23e3,26e3,3e4,35e3,4e4,45e3,5e4,55e3,6e4,7e4,8e4,9e4,1e5,115e3,13e4,145e3,16e4,175e3,2e5,23e4,26e4,29e4,32e4,35e4,38e4,41e4,44e4,47e4,5e5,53e4,56e4,59e4,62e4,65e4,68e4,71e4,75e4,79e4,83e4,87e4,91e4,95e4,99e4,103e4,107e4,112e4,117e4,122e4,127e4,132e4,137e4,142e4,147e4,152e4,157e4,162e4,167e4,172e4,177e4,182e4,188e4,194e4,2e6,206e4,212e4,218e4,224e4,23e5,236e4,242e4,3e6,5e6,7e6,9e6,999e4][lv-1];case GrowType.BannoBansei:return[0,150,500,1300,2500,4e3,8e3,16e3,2e4,3e4,4e4,6e4,8e4,1e5,13e4,16e4,19e4,22e4,25e4,28e4,31e4,34e4,37e4,4e5,44e4,48e4,52e4,56e4,6e5,64e4,68e4,72e4,76e4,8e5,84e4,88e4,92e4,96e4,1e6,104e4,109e4,114e4,119e4,124e4,129e4,134e4,139e4,144e4,149e4,154e4,159e4,164e4,169e4,174e4,179e4,184e4,189e4,194e4,199e4,204e4,209e4,214e4,219e4,224e4,229e4,234e4,239e4,244e4,249e4,254e4,259e4,264e4,269e4,274e4,279e4,284e4,289e4,294e4,299e4,304e4,31e5,316e4,322e4,34e5,36e5,38e5,4e6,42e5,44e5,46e5,48e5,5e6,55e5,6e6,65e5,7e6,8e6,9e6,999e4][lv-1];case GrowType.KogekiBansei:return[0,45,200,600,1e3,1600,2500,3500,4500,5500,7e3,8500,1e4,2e4,3e4,5e4,7e4,9e4,11e4,13e4,15e4,17e4,19e4,21e4,23e4,24e4,25e4,26e4,27e4,28e4,29e4,3e5,31e4,32e4,33e4,34e4,35e4,36e4,37e4,38e4,39e4,4e5,41e4,42e4,43e4,44e4,45e4,46e4,47e4,48e4,49e4,5e5,51e4,52e4,53e4,54e4,55e4,56e4,57e4,58e4,63e4,68e4,73e4,78e4,83e4,88e4,93e4,98e4,103e4,109e4,115e4,121e4,127e4,133e4,139e4,145e4,151e4,157e4,163e4,169e4,175e4,181e4,187e4,193e4,199e4,205e4,211e4,217e4,223e4,231e4,239e4,247e4,255e4,263e4,3e6,5e6,7e6,9e6,999e4][lv-1];case GrowType.BougyoBansei:return[0,55,300,900,1300,2e3,3500,5e3,7500,1e4,12500,15500,2e4,3e4,4e4,5e4,7e4,9e4,11e4,13e4,15e4,17e4,19e4,21e4,23e4,24e4,25e4,26e4,27e4,28e4,29e4,3e5,31e4,32e4,33e4,34e4,35e4,36e4,37e4,38e4,39e4,4e5,41e4,42e4,43e4,44e4,45e4,46e4,47e4,48e4,49e4,5e5,51e4,52e4,53e4,54e4,55e4,56e4,57e4,58e4,63e4,68e4,73e4,78e4,83e4,88e4,93e4,98e4,103e4,109e4,115e4,121e4,127e4,133e4,139e4,145e4,151e4,157e4,163e4,169e4,175e4,181e4,187e4,193e4,199e4,205e4,211e4,217e4,223e4,231e4,239e4,247e4,255e4,263e4,3e6,5e6,7e6,9e6,999e4][lv-1];case GrowType.KogekiTokusyu:return[0,1e5,2e5,3e5,4e5,5e5,6e5,7e5,8e5,9e5,1e6,11e5,12e5,13e5,14e5,15e5,16e5,17e5,18e5,19e5,2e6,21e5,22e5,23e5,24e5,25e5,26e5,27e5,28e5,29e5,3e6,31e5,32e5,33e5,34e5,35e5,36e5,37e5,38e5,39e5,4e6,41e5,42e5,43e5,44e5,45e5,46e5,47e5,48e5,49e5,5e6,51e5,52e5,53e5,54e5,55e5,56e5,57e5,58e5,59e5,6e6,61e5,62e5,63e5,64e5,65e5,66e5,67e5,68e5,69e5,7e6,71e5,72e5,73e5,74e5,75e5,76e5,77e5,78e5,79e5,8e6,81e5,82e5,83e5,84e5,85e5,86e5,87e5,88e5,89e5,9e6,91e5,92e5,93e5,94e5,95e5,96e5,97e5,999e4][lv-1];case GrowType.SyubiTokusyu:return[0,100,350,900,1300,2e3,3500,5e3,7500,1e4,12500,15500,2e4,3e4,4e4,5e4,7e4,9e4,11e4,13e4,15e4,17e4,19e4,21e4,23e4,27e4,3e5,33e4,36e4,38e4,39e4,42e4,47e4,52e4,57e4,62e4,67e4,72e4,77e4,82e4,87e4,92e4,97e4,102e4,107e4,112e4,117e4,122e4,127e4,132e4,138e4,144e4,15e5,156e4,162e4,168e4,174e4,18e5,186e4,192e4,198e4,204e4,21e5,216e4,222e4,228e4,234e4,24e5,246e4,252e4,258e4,264e4,27e5,276e4,282e4,288e4,294e4,3e6,306e4,312e4,318e4,325e4,332e4,339e4,346e4,353e4,36e5,367e4,374e4,381e4,388e4,395e4,402e4,409e4,416e4,5e6,7e6,9e6,999e4][lv-1]}};var getMHPGrow=function(g,lv){switch(g){case GrowType.FutsuSojuku:return[0,8,15,21,26,30,33,36,39,42,45,48,51,54,57,59,61,63,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146][lv-1];case GrowType.KogekiSojuku:return[0,3,6,9,11,13,15,17,19,21,23,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67][lv-1];case GrowType.BougyoSojuku:return[0,4,8,11,14,17,20,23,26,29,32,35,38,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84][lv-1];case GrowType.BannoBansei:return[0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,93,96,99,102,105,108,111,114,117,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210][lv-1];case GrowType.KogekiBansei:return[0,3,6,9,12,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132][lv-1];case GrowType.BougyoBansei:return[0,8,15,21,26,30,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86][lv-1];case GrowType.KogekiTokusyu:return[0,10,15,20,25,30,35,40,45,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55][lv-1];case GrowType.SyubiTokusyu:return[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0][lv-1]}};var getATKGrow=function(g,lv){switch(g){case GrowType.FutsuSojuku:return[0,9,14,18,21,24,27,30,33,36,38,40,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,71,71,72,72,73,73,74,74,75,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76][lv-1];case GrowType.KogekiSojuku:return[0,2,4,6,8,11,14,17,20,23,26,29,32,35,37,39,41,43,45,47,49,51,53,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131][lv-1];case GrowType.BougyoSojuku:return[0,5,10,14,17,20,22,24,26,28,30,32,34,36,38,39,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40][lv-1];case GrowType.BannoBansei:return[0,10,16,21,26,31,36,39,42,45,48,51,54,57,60,63,66,69,72,74,76,78,80,82,84,86,88,90,92,94,96,98,99,100,101,102,103,104,105,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136][lv-1];case GrowType.KogekiBansei:return[0,5,9,12,14,16,18,20,22,23,24,26,28,30,32,34,36,38,40,42,43,43,44,44,45,45,46,46,47,47,48,49,50,51,52,53,54,55,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176][lv-1];case GrowType.BougyoBansei:return[0,2,4,6,8,10,12,14,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35][lv-1];case GrowType.KogekiTokusyu:return[0,70,140,200,260,310,360,410,460,510,515,519,522,524,526,528,530,532,534,536,538,540,542,544,546,548,550,552,554,556,558,560,562,564,566,568,570,572,574,576,578,580,582,584,586,588,590,592,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644][lv-1];case GrowType.SyubiTokusyu:return[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0][lv-1]}};var getDEFGrow=function(g,lv){switch(g){case GrowType.FutsuSojuku:return[0,2,4,6,8,10,12,14,16,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40][lv-1];case GrowType.KogekiSojuku:return[0,2,4,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33][lv-1];case GrowType.BougyoSojuku:return[0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,55,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91][lv-1];case GrowType.BannoBansei:return[0,2,4,6,8,10,12,14,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107][lv-1];case GrowType.KogekiBansei:return[0,1,2,3,4,5,6,9,12,15,18,21,24,25,26,27,28,29,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31][lv-1];case GrowType.BougyoBansei:return[0,6,11,15,18,21,23,25,27,29,31,33,35,37,39,41,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,127,129,130,132,133,135,136,138,139,141,142,144,145,147,148,150,151,153,154,158][lv-1];case GrowType.KogekiTokusyu:return[0,30,35,40,45,50,55,60,65,70,74,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165][lv-1];case GrowType.SyubiTokusyu:return[0,3,6,9,12,15,18,21,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204][lv-1]}};exports.getBasicMonsterStatus=function(name,lv){var basicMonsterStatusDict={"いたずらもぐら":{growType:GrowType.FutsuSojuku,mhp0:8,atk0:6,def0:5,maximumLv:5,exp:0,recovery:50},"がいこつけんし":{growType:GrowType.FutsuSojuku,mhp0:35,atk0:20,def0:10,maximumLv:9,exp:0,recovery:50},"かげのきし":{growType:GrowType.FutsuSojuku,mhp0:85,atk0:30,def0:29,maximumLv:9,exp:0,recovery:50},"キラースター":{growType:GrowType.FutsuSojuku,mhp0:62,atk0:19,def0:18,maximumLv:99,exp:0,recovery:100},"グール":{growType:GrowType.FutsuSojuku,mhp0:50,atk0:21,def0:20,maximumLv:9,exp:0,recovery:50},"くさった死体":{growType:GrowType.FutsuSojuku,mhp0:45,atk0:15,def0:15,maximumLv:9,exp:0,recovery:50},"しりょうのきし":{growType:GrowType.FutsuSojuku,mhp0:70,atk0:35,def0:35,maximumLv:9,exp:0,recovery:50},"スライム":{growType:GrowType.FutsuSojuku,mhp0:5,atk0:2,def0:2,maximumLv:99,exp:0,recovery:50},"スライムベス":{growType:GrowType.FutsuSojuku,mhp0:6,atk0:3,def0:3,maximumLv:99,exp:0,recovery:50},"スライムベホマズン":{growType:GrowType.FutsuSojuku,mhp0:100,atk0:50,def0:50,maximumLv:9,exp:0,recovery:100},"タホドラキー":{growType:GrowType.FutsuSojuku,mhp0:35,atk0:16,def0:15,maximumLv:3,exp:0,recovery:50},"デビルアンカー":{growType:GrowType.FutsuSojuku,mhp0:45,atk0:16,def0:11,maximumLv:99,exp:0,recovery:100},"どくどくゾンビ":{growType:GrowType.FutsuSojuku,mhp0:100,atk0:45,def0:35,maximumLv:9,exp:0,recovery:50},"ドラキー":{growType:GrowType.FutsuSojuku,mhp0:7,atk0:5,def0:2,maximumLv:99,exp:0,recovery:50},"ドラキーマ":{growType:GrowType.FutsuSojuku,mhp0:42,atk0:20,def0:14,maximumLv:99,exp:0,recovery:100},"ハエまどう":{growType:GrowType.FutsuSojuku,mhp0:50,atk0:16,def0:24,maximumLv:99,exp:0,recovery:50},"ファイヤーケロッグ":{growType:GrowType.FutsuSojuku,mhp0:40,atk0:11,def0:10,maximumLv:9,exp:0,recovery:50},"ブラウニー":{growType:GrowType.FutsuSojuku,mhp0:25,atk0:14,def0:17,maximumLv:99,exp:0,recovery:50},"プラチナキング":{growType:GrowType.FutsuSojuku,mhp0:134,atk0:52,def0:52,maximumLv:99,exp:0,recovery:100},"ホイミスライム":{growType:GrowType.FutsuSojuku,mhp0:28,atk0:10,def0:9,maximumLv:99,exp:0,recovery:50},"メイジももんじゃ":{growType:GrowType.FutsuSojuku,mhp0:45,atk0:19,def0:19,maximumLv:99,exp:0,recovery:50},"ももんじゃ":{growType:GrowType.FutsuSojuku,mhp0:12,atk0:7,def0:5,maximumLv:99,exp:0,recovery:50},"リビングデッド":{growType:GrowType.FutsuSojuku,mhp0:50,atk0:15,def0:16,maximumLv:9,exp:0,recovery:50},"リビングハンマー":{growType:GrowType.FutsuSojuku,mhp0:90,atk0:44,def0:30,maximumLv:99,exp:0,recovery:100},"エリミネーター":{growType:GrowType.KogekiSojuku,mhp0:100,atk0:30,def0:35,maximumLv:99,exp:0,recovery:100},"キメラ":{growType:GrowType.KogekiSojuku,mhp0:48,atk0:30,def0:20,maximumLv:99,exp:0,recovery:30},"さつじんき":{growType:GrowType.KogekiSojuku,mhp0:48,atk0:16,def0:18,maximumLv:99,exp:0,recovery:50},"しにがみ":{growType:GrowType.KogekiSojuku,mhp0:35,atk0:15,def0:13,maximumLv:99,exp:0,recovery:50},"スターキメラ":{growType:GrowType.KogekiSojuku,mhp0:78,atk0:32,def0:31,maximumLv:99,exp:0,recovery:30},"スモールグール":{growType:GrowType.KogekiSojuku,mhp0:55,atk0:17,def0:10,maximumLv:99,exp:0,recovery:50},"デスストーカー":{growType:GrowType.KogekiSojuku,mhp0:150,atk0:45,def0:45,maximumLv:99,exp:0,recovery:100},"トロル":{growType:GrowType.KogekiSojuku,mhp0:50,atk0:23,def0:23,maximumLv:99,exp:0,recovery:100},"トロルボンバー":{growType:GrowType.KogekiSojuku,mhp0:60,atk0:31,def0:27,maximumLv:99,exp:0,recovery:100},"ベロベロ":{growType:GrowType.KogekiSojuku,mhp0:80,atk0:45,def0:30,maximumLv:99,exp:0,recovery:50},"マミー":{growType:GrowType.KogekiSojuku,mhp0:40,atk0:25,def0:13,maximumLv:99,exp:0,recovery:50},"ミイラおとこ":{growType:GrowType.KogekiSojuku,mhp0:42,atk0:21,def0:13,maximumLv:99,exp:0,recovery:50},"ゆうれい":{growType:GrowType.KogekiSojuku,mhp0:23,atk0:18,def0:5,maximumLv:99,exp:0,recovery:50},"アイアンタートル":{growType:GrowType.BougyoSojuku,mhp0:30,atk0:18,def0:19,maximumLv:99,exp:0,recovery:50},"あめふらし":{growType:GrowType.BougyoSojuku,mhp0:31,atk0:19,def0:14,maximumLv:99,exp:0,recovery:50},"アローインプ":{growType:GrowType.BougyoSojuku,mhp0:41,atk0:11,def0:14,maximumLv:99,exp:0,recovery:50},"あんこくつむり":{growType:GrowType.BougyoSojuku,mhp0:30,atk0:20,def0:19,maximumLv:99,exp:0,recovery:50},"岩とびあくま":{growType:GrowType.BougyoSojuku,mhp0:32,atk0:15,def0:18,maximumLv:99,exp:0,recovery:50},"エビルポット":{growType:GrowType.BougyoSojuku,mhp0:26,atk0:8,def0:11,maximumLv:99,exp:0,recovery:50},"おおナメクジ":{growType:GrowType.BougyoSojuku,mhp0:17,atk0:8,def0:7,maximumLv:99,exp:0,recovery:50},"おどる宝石":{growType:GrowType.BougyoSojuku,mhp0:36,atk0:10,def0:8,maximumLv:99,exp:0,recovery:50},"ガニラス":{growType:GrowType.BougyoSojuku,mhp0:33,atk0:17,def0:15,maximumLv:99,exp:0,recovery:100},"キラーマンティス":{growType:GrowType.BougyoSojuku,mhp0:50,atk0:16,def0:18,maximumLv:99,exp:0,recovery:100},"ぐんたいガニ":{growType:GrowType.BougyoSojuku,mhp0:47,atk0:23,def0:19,maximumLv:99,exp:0,recovery:100},"ケダモン":{growType:GrowType.BougyoSojuku,mhp0:33,atk0:17,def0:16,maximumLv:99,exp:0,recovery:50},"ゴースト":{growType:GrowType.BougyoSojuku,mhp0:21,atk0:9,def0:10,maximumLv:99,exp:0,recovery:50},"さそりかまきり":{growType:GrowType.BougyoSojuku,mhp0:15,atk0:11,def0:10,maximumLv:99,exp:0,recovery:100},"じごくのハサミ":{growType:GrowType.BougyoSojuku,mhp0:35,atk0:17,def0:18,maximumLv:99,exp:0,recovery:100},"しびれマイマイ":{growType:GrowType.BougyoSojuku,mhp0:28,atk0:14,def0:18,maximumLv:99,exp:0,recovery:50},"ストローマウス":{growType:GrowType.BougyoSojuku,mhp0:19,atk0:12,def0:13,maximumLv:99,exp:0,recovery:50},"スライムブレス":{growType:GrowType.BougyoSojuku,mhp0:34,atk0:14,def0:12,maximumLv:99,exp:0,recovery:50},"タッフペンギー":{growType:GrowType.BougyoSojuku,mhp0:31,atk0:13,def0:15,maximumLv:99,exp:0,recovery:50},"タマゴロン":{growType:GrowType.BougyoSojuku,mhp0:6,atk0:10,def0:3,maximumLv:99,exp:0,recovery:50},"ちゅうまじゅう":{growType:GrowType.BougyoSojuku,mhp0:25,atk0:11,def0:11,maximumLv:99,exp:0,recovery:50},"つかいま":{growType:GrowType.BougyoSojuku,mhp0:125,atk0:40,def0:35,maximumLv:99,exp:0,recovery:50},"つのうしがい":{growType:GrowType.BougyoSojuku,mhp0:23,atk0:13,def0:14,maximumLv:99,exp:0,recovery:50},"ドラゴスライム":{growType:GrowType.BougyoSojuku,mhp0:37,atk0:19,def0:18,maximumLv:99,exp:0,recovery:150},"ドラゴメタル":{growType:GrowType.BougyoSojuku,mhp0:50,atk0:25,def0:50,maximumLv:99,exp:0,recovery:50},"ドルイド":{growType:GrowType.BougyoSojuku,mhp0:20,atk0:10,def0:6,maximumLv:99,exp:0,recovery:50},"どろにんぎょう":{growType:GrowType.BougyoSojuku,mhp0:35,atk0:20,def0:10,maximumLv:99,exp:0,recovery:50},"バブルスライム":{growType:GrowType.BougyoSojuku,mhp0:21,atk0:9,def0:7,maximumLv:5,exp:0,recovery:50},"パペットマン":{growType:GrowType.BougyoSojuku,mhp0:35,atk0:16,def0:10,maximumLv:99,exp:0,recovery:50},"ファーラット":{growType:GrowType.BougyoSojuku,mhp0:21,atk0:10,def0:9,maximumLv:99,exp:0,recovery:50},"ベビーサタン":{growType:GrowType.BougyoSojuku,mhp0:44,atk0:10,def0:15,maximumLv:99,exp:0,recovery:50},"ヘルゴースト":{growType:GrowType.BougyoSojuku,mhp0:46,atk0:19,def0:21,maximumLv:99,exp:0,recovery:50},"マージスター":{growType:GrowType.BougyoSojuku,mhp0:26,atk0:15,def0:13,maximumLv:99,exp:0,recovery:50},"ミニデーモン":{growType:GrowType.BougyoSojuku,mhp0:49,atk0:20,def0:24,maximumLv:99,exp:0,recovery:50},"メイジキメラ":{growType:GrowType.BougyoSojuku,mhp0:60,atk0:27,def0:20,maximumLv:99,exp:0,recovery:50},"メガザルロック":{growType:GrowType.BougyoSojuku,mhp0:35,atk0:14,def0:9,maximumLv:99,exp:0,recovery:50},"メダパニシックル":{growType:GrowType.BougyoSojuku,mhp0:90,atk0:19,def0:25,maximumLv:99,exp:0,recovery:100},"メトロゴースト":{growType:GrowType.BougyoSojuku,mhp0:41,atk0:13,def0:18,maximumLv:99,exp:0,recovery:50},"ランドアーマー":{growType:GrowType.BougyoSojuku,mhp0:31,atk0:20,def0:35,maximumLv:99,exp:0,recovery:50},"リリパット":{growType:GrowType.BougyoSojuku,mhp0:40,atk0:11,def0:12,maximumLv:99,exp:0,recovery:50},"ワンダーエッグ":{growType:GrowType.BougyoSojuku,mhp0:6,atk0:10,def0:3,maximumLv:99,exp:0,recovery:50},"アークデーモン":{growType:GrowType.BannoBansei,mhp0:60,atk0:26,def0:27,maximumLv:99,exp:0,recovery:100},"ギガンテス":{growType:GrowType.BannoBansei,mhp0:55,atk0:22,def0:22,maximumLv:99,exp:0,recovery:50},"キラースコップ":{growType:GrowType.BannoBansei,mhp0:22,atk0:10,def0:10,maximumLv:99,exp:0,recovery:50},"グレイトホーン":{growType:GrowType.BannoBansei,mhp0:80,atk0:28,def0:29,maximumLv:99,exp:0,recovery:100},"ゴーレム":{growType:GrowType.BannoBansei,mhp0:50,atk0:20,def0:20,maximumLv:99,exp:0,recovery:100},"レノファイター":{growType:GrowType.BannoBansei,mhp0:70,atk0:21,def0:27,maximumLv:99,exp:0,recovery:100},"あくましんかん":{growType:GrowType.KogekiBansei,mhp0:48,atk0:22,def0:15,maximumLv:99,exp:0,recovery:50},"うごくせきぞう":{growType:GrowType.KogekiBansei,mhp0:42,atk0:20,def0:22,maximumLv:99,exp:0,recovery:100},"キースドラゴン":{growType:GrowType.KogekiBansei,mhp0:150,atk0:50,def0:40,maximumLv:99,exp:0,recovery:100},"グレイトマーマン":{growType:GrowType.KogekiBansei,mhp0:39,atk0:20,def0:18,maximumLv:99,exp:0,recovery:50},"じごくのつかい":{growType:GrowType.KogekiBansei,mhp0:44,atk0:22,def0:17,maximumLv:99,exp:0,recovery:50},"スカイフロッグ":{growType:GrowType.KogekiBansei,mhp0:38,atk0:9,def0:10,maximumLv:99,exp:0,recovery:50},"ストーンマン":{growType:GrowType.KogekiBansei,mhp0:75,atk0:25,def0:29,maximumLv:99,exp:0,recovery:100},"ダースドラゴン":{growType:GrowType.KogekiBansei,mhp0:150,atk0:50,def0:55,maximumLv:99,exp:0,recovery:100},"デーモントード":{growType:GrowType.KogekiBansei,mhp0:45,atk0:21,def0:19,maximumLv:99,exp:0,recovery:50},"ドラゴン":{growType:GrowType.KogekiBansei,mhp0:120,atk0:40,def0:36,maximumLv:99,exp:0,recovery:100},"バーサーカー":{growType:GrowType.KogekiBansei,mhp0:30,atk0:12,def0:12,maximumLv:99,exp:0,recovery:50},"ひとくいばこ":{growType:GrowType.KogekiBansei,mhp0:20,atk0:40,def0:10,maximumLv:99,exp:0,recovery:50},"ひょうがまじん":{growType:GrowType.KogekiBansei,mhp0:70,atk0:30,def0:20,maximumLv:99,exp:0,recovery:100},"ミミック":{growType:GrowType.KogekiBansei,mhp0:50,atk0:10,def0:15,maximumLv:99,exp:0,recovery:50},"ようがんまじん":{growType:GrowType.KogekiBansei,mhp0:97,atk0:31,def0:36,maximumLv:99,exp:0,recovery:100},"アイアンアント":{growType:GrowType.BougyoBansei,mhp0:17,atk0:13,def0:20,maximumLv:99,exp:0,recovery:50},"イエティ":{growType:GrowType.BougyoBansei,mhp0:70,atk0:15,def0:5,maximumLv:99,exp:0,recovery:150},"いしにんぎょう":{growType:GrowType.BougyoBansei,mhp0:100,atk0:45,def0:45,maximumLv:99,exp:0,recovery:50},"おおきづち":{growType:GrowType.BougyoBansei,mhp0:15,atk0:10,def0:8,maximumLv:5,exp:0,recovery:50},"おおめだま":{growType:GrowType.BougyoBansei,mhp0:55,atk0:22,def0:22,maximumLv:99,exp:0,recovery:50},"おばけキノコ":{growType:GrowType.BougyoBansei,mhp0:38,atk0:20,def0:12,maximumLv:99,exp:0,recovery:50},"おばけヒトデ":{growType:GrowType.BougyoBansei,mhp0:22,atk0:12,def0:12,maximumLv:5,exp:0,recovery:50},"ガーゴイル":{growType:GrowType.BougyoBansei,mhp0:200,atk0:180,def0:150,maximumLv:99,exp:0,recovery:100},"きとうし":{growType:GrowType.BougyoBansei,mhp0:39,atk0:8,def0:10,maximumLv:99,exp:0,recovery:50},"きめんどうし":{growType:GrowType.BougyoBansei,mhp0:18,atk0:9,def0:8,maximumLv:99,exp:0,recovery:50},"キラーアーマー":{growType:GrowType.BougyoBansei,mhp0:55,atk0:25,def0:26,maximumLv:99,exp:0,recovery:100},"キラープラスター":{growType:GrowType.BougyoBansei,mhp0:135,atk0:55,def0:52,maximumLv:99,exp:0,recovery:100},"キラーマシン":{growType:GrowType.BougyoBansei,mhp0:60,atk0:20,def0:25,maximumLv:99,exp:0,recovery:100},"ぐんたいアリ":{growType:GrowType.BougyoBansei,mhp0:40,atk0:8,def0:11,maximumLv:99,exp:0,recovery:50},"げんじゅつし":{growType:GrowType.BougyoBansei,mhp0:37,atk0:18,def0:16,maximumLv:99,exp:0,recovery:50},"コロヒーロー":{growType:GrowType.BougyoBansei,mhp0:34,atk0:9,def0:14,maximumLv:99,exp:0,recovery:50},"コロファイター":{growType:GrowType.BougyoBansei,mhp0:35,atk0:10,def0:15,maximumLv:99,exp:0,recovery:50},"コロプリースト":{growType:GrowType.BougyoBansei,mhp0:35,atk0:11,def0:14,maximumLv:99,exp:0,recovery:50},"コロマージ":{growType:GrowType.BougyoBansei,mhp0:35,atk0:10,def0:16,maximumLv:99,exp:0,recovery:50},"さまようよろい":{growType:GrowType.BougyoBansei,mhp0:45,atk0:21,def0:23,maximumLv:99,exp:0,recovery:100},"じごくのよろい":{growType:GrowType.BougyoBansei,mhp0:105,atk0:45,def0:47,maximumLv:99,exp:0,recovery:100},"しびれくらげ":{growType:GrowType.BougyoBansei,mhp0:31,atk0:10,def0:12,maximumLv:99,exp:0,recovery:50},"シャーマン":{growType:GrowType.BougyoBansei,mhp0:35,atk0:20,def0:17,maximumLv:99,exp:0,recovery:50},"シャドーナイト":{growType:GrowType.BougyoBansei,mhp0:48,atk0:19,def0:14,maximumLv:99,exp:0,recovery:50},"シルバーデビル":{growType:GrowType.BougyoBansei,mhp0:65,atk0:20,def0:20,maximumLv:99,exp:0,recovery:100},"スーパーテンツク":{growType:GrowType.BougyoBansei,mhp0:38,atk0:22,def0:20,maximumLv:99,exp:0,recovery:50},"スペクテット":{growType:GrowType.BougyoBansei,mhp0:45,atk0:10,def0:15,maximumLv:99,exp:0,recovery:50},"ゾンビマスター":{growType:GrowType.BougyoBansei,mhp0:55,atk0:23,def0:18,maximumLv:99,exp:0,recovery:50},"だいまじん":{growType:GrowType.BougyoBansei,mhp0:105,atk0:34,def0:30,maximumLv:99,exp:0,recovery:100},"だいまどう":{growType:GrowType.BougyoBansei,mhp0:41,atk0:17,def0:17,maximumLv:99,exp:0,recovery:50},"ダンスキャロット":{growType:GrowType.BougyoBansei,mhp0:28,atk0:18,def0:13,maximumLv:99,exp:0,recovery:50},"デスマシーン":{growType:GrowType.BougyoBansei,mhp0:128,atk0:65,def0:53,maximumLv:99,exp:0,recovery:100},"デビルロード":{growType:GrowType.BougyoBansei,mhp0:120,atk0:25,def0:35,maximumLv:99,exp:0,recovery:100},"テンツク":{growType:GrowType.BougyoBansei,mhp0:35,atk0:17,def0:19,maximumLv:99,exp:0,recovery:50},"どぐう戦士":{growType:GrowType.BougyoBansei,mhp0:120,atk0:39,def0:50,maximumLv:99,exp:0,recovery:100},"どくやずきん":{growType:GrowType.BougyoBansei,mhp0:50,atk0:15,def0:18,maximumLv:99,exp:0,recovery:50},"ドッグスナイパー":{growType:GrowType.BougyoBansei,mhp0:50,atk0:15,def0:15,maximumLv:99,exp:0,recovery:100},"ドラゴンキッズ":{growType:GrowType.BougyoBansei,mhp0:55,atk0:18,def0:18,maximumLv:99,exp:0,recovery:50},"ばくだん岩":{growType:GrowType.BougyoBansei,mhp0:100,atk0:15,def0:5,maximumLv:99,exp:0,recovery:50},"バズズ":{growType:GrowType.BougyoBansei,mhp0:135,atk0:30,def0:45,maximumLv:99,exp:0,recovery:100},"はねせんにん":{growType:GrowType.BougyoBansei,mhp0:17,atk0:9,def0:13,maximumLv:99,exp:0,recovery:50},"ビッグスロース":{growType:GrowType.BougyoBansei,mhp0:55,atk0:8,def0:5,maximumLv:99,exp:0,recovery:150},"プチヒーロー":{growType:GrowType.BougyoBansei,mhp0:35,atk0:10,def0:15,maximumLv:99,exp:0,recovery:50},"プチファイター":{growType:GrowType.BougyoBansei,mhp0:35,atk0:11,def0:14,maximumLv:99,exp:0,recovery:50},"プチプリースト":{growType:GrowType.BougyoBansei,mhp0:33,atk0:10,def0:14,maximumLv:99,exp:0,recovery:50},"プチマージ":{growType:GrowType.BougyoBansei,mhp0:20,atk0:8,def0:10,maximumLv:99,exp:0,recovery:50},"フライングデビル":{growType:GrowType.BougyoBansei,mhp0:130,atk0:40,def0:40,maximumLv:99,exp:0,recovery:100},"ベビーニュート":{growType:GrowType.BougyoBansei,mhp0:20,atk0:13,def0:14,maximumLv:99,exp:0,recovery:50},"ベホマスライム":{growType:GrowType.BougyoBansei,mhp0:35,atk0:20,def0:10,maximumLv:99,exp:0,recovery:50},"マージマタンゴ":{growType:GrowType.BougyoBansei,mhp0:110,atk0:40,def0:40,maximumLv:99,exp:0,recovery:50},"マタンゴ":{growType:GrowType.BougyoBansei,mhp0:51,atk0:22,def0:21,maximumLv:99,exp:0,recovery:50},"まどうし":{growType:GrowType.BougyoBansei,mhp0:35,atk0:14,def0:13,maximumLv:99,exp:0,recovery:50},"マンドラゴラ":{growType:GrowType.BougyoBansei,mhp0:75,atk0:25,def0:28,maximumLv:99,exp:0,recovery:50},"ミステリドール":{growType:GrowType.BougyoBansei,mhp0:60,atk0:23,def0:17,maximumLv:99,exp:0,recovery:50},"メタルハンター":{growType:GrowType.BougyoBansei,mhp0:130,atk0:40,def0:45,maximumLv:99,exp:0,recovery:100},"メラリザード":{growType:GrowType.BougyoBansei,mhp0:90,atk0:29,def0:27,maximumLv:99,exp:0,recovery:50},"モシャスナイト":{growType:GrowType.BougyoBansei,mhp0:51,atk0:20,def0:22,maximumLv:99,exp:0,recovery:50},"ようじゅつし":{growType:GrowType.BougyoBansei,mhp0:34,atk0:12,def0:15,maximumLv:99,exp:0,recovery:50},"ラストテンツク":{growType:GrowType.BougyoBansei,mhp0:95,atk0:28,def0:26,maximumLv:99,exp:0,recovery:50},"ラリホーアント":{growType:GrowType.BougyoBansei,mhp0:25,atk0:11,def0:10,maximumLv:99,exp:0,recovery:50},"ランガー":{growType:GrowType.BougyoBansei,mhp0:140,atk0:51,def0:45,maximumLv:99,exp:0,recovery:100},"アトラス":{growType:GrowType.KogekiTokusyu,mhp0:130,atk0:60,def0:48,maximumLv:10,exp:0,recovery:100},"エビルエスターク":{growType:GrowType.KogekiTokusyu,mhp0:145,atk0:60,def0:55,maximumLv:10,exp:0,recovery:100},"キングスライム":{growType:GrowType.KogekiTokusyu,mhp0:100,atk0:50,def0:50,maximumLv:10,exp:0,recovery:100},"こうてつまじん":{growType:GrowType.KogekiTokusyu,mhp0:135,atk0:60,def0:55,maximumLv:10,exp:0,recovery:100},"ゴールデンスライム":{growType:GrowType.KogekiTokusyu,mhp0:132,atk0:50,def0:50,maximumLv:10,exp:0,recovery:50},"ゴールドマン":{growType:GrowType.KogekiTokusyu,mhp0:131,atk0:51,def0:55,maximumLv:99,exp:0,recovery:100},"ジャスティス兄":{growType:GrowType.KogekiTokusyu,mhp0:150,atk0:80,def0:80,maximumLv:99,exp:0,recovery:150},"スライムエンペラー":{growType:GrowType.KogekiTokusyu,mhp0:133,atk0:51,def0:51,maximumLv:10,exp:0,recovery:100},"トロルキング":{growType:GrowType.KogekiTokusyu,mhp0:131,atk0:66,def0:53,maximumLv:99,exp:0,recovery:100},"ベリアル":{growType:GrowType.KogekiTokusyu,mhp0:135,atk0:65,def0:55,maximumLv:10,exp:0,recovery:100},"あやしいかげ":{growType:GrowType.SyubiTokusyu,mhp0:5,atk0:20,def0:1,maximumLv:9,exp:0,recovery:50},"オニオーン":{growType:GrowType.SyubiTokusyu,mhp0:10,atk0:1,def0:1,maximumLv:99,exp:0,recovery:50},"サンダーラット":{growType:GrowType.SyubiTokusyu,mhp0:6,atk0:12,def0:4,maximumLv:9,exp:0,recovery:150},"シャドー":{growType:GrowType.SyubiTokusyu,mhp0:5,atk0:13,def0:1,maximumLv:9,exp:0,recovery:50},"たまねぎマン":{growType:GrowType.SyubiTokusyu,mhp0:10,atk0:1,def0:100,maximumLv:99,exp:0,recovery:50},"はぐれメタル":{growType:GrowType.SyubiTokusyu,mhp0:5,atk0:10,def0:200,maximumLv:99,exp:0,recovery:50},"バブリン":{growType:GrowType.SyubiTokusyu,mhp0:100,atk0:35,def0:15,maximumLv:99,exp:0,recovery:100},"はりせんもぐら":{growType:GrowType.SyubiTokusyu,mhp0:4,atk0:7,def0:4,maximumLv:9,exp:0,recovery:50},"プヨンターゲット":{growType:GrowType.SyubiTokusyu,mhp0:150,atk0:45,def0:20,maximumLv:99,exp:0,recovery:100},"プラズママウス":{growType:GrowType.SyubiTokusyu,mhp0:6,atk0:40,def0:4,maximumLv:9,exp:0,recovery:150},"ブラッドハンド":{growType:GrowType.SyubiTokusyu,mhp0:26,atk0:17,def0:15,maximumLv:99,exp:0,recovery:50},"ポムポムボム":{growType:GrowType.SyubiTokusyu,mhp0:200,atk0:55,def0:29,maximumLv:99,exp:0,recovery:100},"マドハンド":{growType:GrowType.SyubiTokusyu,mhp0:10,atk0:6,def0:5,maximumLv:99,exp:0,recovery:30},"メタルキング":{growType:GrowType.SyubiTokusyu,mhp0:50,atk0:10,def0:100,maximumLv:99,exp:0,recovery:100},"メタルスライム":{growType:GrowType.SyubiTokusyu,mhp0:6,atk0:10,def0:100,maximumLv:99,exp:0,recovery:50},"笑いぶくろ":{growType:GrowType.SyubiTokusyu,mhp0:35,atk0:0,def0:5,maximumLv:99,exp:0,recovery:50}};var msd=basicMonsterStatusDict[name];if(!msd){throw new Error("不正なモンスター名: "+name)}if(lv<1||lv>msd.maximumLv){throw new Error("不正なレベル: "+lv+", for "+name)}msd.exp=getEXP(msd.growType,lv);msd.mhp0+=getMHPGrow(msd.growType,lv);msd.atk0+=getATKGrow(msd.growType,lv);msd.def0+=getDEFGrow(msd.growType,lv);return __assign({name:name},msd)}},{}],11:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:true});var status_1=require("./status");var config_1=require("./config");var Unit=function(){function Unit(inp,place,pConf){this.pConf=pConf;this.mhp=-1;this.chp=-1;this.atk=-1;this.def=-1;this.name=inp.name;this.lv=inp.lv;this.weakenAtk=inp.weakenAtk?inp.weakenAtk:0;this.weakenDef=inp.weakenDef?inp.weakenDef:0;this.atkDope=inp.atkDope?inp.atkDope:0;this.hpDope=inp.hpDope?inp.hpDope:0;this.isSealed=inp.isSealed!==undefined?inp.isSealed:false;this.place=place;var status=status_1.getBasicMonsterStatus(inp.name,inp.lv);this.recovery=status.recovery;this.exp=status.exp;this.maximumLv=status.maximumLv;this.setMHP();this.setAtk();this.setDef();this.chp=this.mhp}Unit.prototype.setMHP=function(){var mhp=status_1.getBasicMonsterStatus(this.name,this.lv).mhp0+this.hpDope;this.mhp=mhp};Unit.prototype.setAtk=function(){var atk=status_1.getBasicMonsterStatus(this.name,this.lv).atk0+this.atkDope;if(this.weakenAtk>0){atk*=Math.pow(.5,this.weakenAtk)}if(this.weakenAtk>=9){atk=0}atk=Math.ceil(atk);this.atk=atk};Unit.prototype.setDef=function(){var def=status_1.getBasicMonsterStatus(this.name,this.lv).def0;if(this.weakenDef===1){def*=.8}else if(this.weakenDef===2){def*=.7}else if(this.weakenDef===3){def*=.5}else if(this.weakenDef===4){def*=.4}else if(this.weakenDef===5){def*=.2}else if(this.weakenDef===6){def*=.001}else if(this.weakenDef===7){def=0}def=Math.floor(def);this.def=def};Unit.prototype.attack=function(enemy,fixedDamage){if(fixedDamage===void 0){fixedDamage=0}if(this.atk===0){config_1.logger.debug("様子を見ている because "+this.name+"'s atk is 0");return false}if(Math.random()>this.pConf.basic.attack){config_1.logger.debug("attacked "+enemy.name+" at ["+enemy.place.row+", "+enemy.place.col+"]: but missed.");return false}var damage=fixedDamage===0?Math.round(this.atk*1.3*Math.pow(35/36,enemy.def)*(Math.random()/4+7/8)):fixedDamage;if(damage<1){enemy.chp-=1}else{enemy.chp-=damage}config_1.logger.debug("attacked "+enemy.name+" at ["+enemy.place.row+", "+enemy.place.col+"]: damage("+damage+")");return true};Unit.prototype.getMinAndMaxDamage=function(enemy){var _this=this;var RANDMAX=256;var calc=function(rand){var damage=Math.round(Math.ceil(_this.atk)*1.3*Math.pow(35/36,enemy.def)*(7/8+rand/RANDMAX/4));return damage===0?1:damage};var minDamage=calc(0);var maxDamage=calc(RANDMAX-1);var meanDamage=0;for(var rand=0;rand<RANDMAX;rand++){meanDamage+=calc(rand)/RANDMAX}return[minDamage,maxDamage,meanDamage]};return Unit}();exports.Unit=Unit;var Friend=function(_super){__extends(Friend,_super);function Friend(inp,order,place,pConf){var _this=_super.call(this,inp,place,pConf)||this;_this.killCount=0;_this.divisionLossCount=0;_this.actionLossCount=0;_this.order=order;_this.doubleSpeed=inp.doubleSpeed!==undefined?inp.doubleSpeed:false;_this.isSticked=inp.isSticked!==undefined?inp.isSticked:true;config_1.logger.debug({name:_this.name,mhp:_this.mhp,atk:_this.atk,def:_this.def});return _this}Friend.prototype.getExp=function(exp){if(exp===void 0){exp=22}this.killCount+=1;this.exp+=exp;config_1.logger.debug("get EXP");if(this.lv===this.maximumLv)return;while(status_1.getBasicMonsterStatus(this.name,this.lv+1).exp<this.exp){var status0=status_1.getBasicMonsterStatus(this.name,this.lv);var status1=status_1.getBasicMonsterStatus(this.name,this.lv+1);this.lv+=1;this.mhp=status1.mhp0+this.hpDope;this.chp+=status1.mhp0-status0.mhp0;this.setAtk();this.setDef();config_1.logger.debug("lv up: "+(this.lv-1)+" -> "+this.lv)}};Friend.prototype.getDamage=function(damage){this.chp-=damage};Friend.prototype.naturalRecovery=function(){config_1.logger.debug("natural recovery: "+(this.mhp/this.recovery).toFixed(2));this.chp+=this.mhp/this.recovery;if(this.chp>this.mhp){this.chp=this.mhp}};return Friend}(Unit);exports.Friend=Friend;var Enemy=function(_super){__extends(Enemy,_super);function Enemy(place,num,pConf){var _this=_super.call(this,{name:"スモールグール",lv:1},place,pConf)||this;_this.num=num;return _this}return Enemy}(Unit);exports.Enemy=Enemy},{"./config":5,"./status":10}],torneko3:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var status_1=require("./status");exports.getBasicMonsterStatus=status_1.getBasicMonsterStatus;var manager_1=require("./manager");exports.Manager=manager_1.Manager;exports.summarizeSCSOutputs=manager_1.summarizeSCSOutputs;exports.overWriteDefaultProbabilityConfig=manager_1.overWriteDefaultProbabilityConfig;var sampleInputs_1=require("./sampleInputs");exports.sampleSCSInputs=sampleInputs_1.sampleInputs;var unit_1=require("./unit");exports.Friend=unit_1.Friend;exports.Enemy=unit_1.Enemy;var actionOrder_1=require("./actionOrder");exports.getOrder=actionOrder_1.getOrder},{"./actionOrder":3,"./manager":6,"./sampleInputs":8,"./status":10,"./unit":11}]},{},[]);